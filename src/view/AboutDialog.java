/*
 * This is free and unencumbered software released into the public domain.
 * 
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 * 
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 * 
 * For more information, please refer to <http://unlicense.org/>
 */

package view;

import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.InputMap;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JTextArea;
import javax.swing.KeyStroke;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;

/**
 * AboutDialog class
 */
public class AboutDialog extends JDialog {

    /**
     * Creates new form AboutDialog
     * 
     * @param parent Parent frame
     */
    public AboutDialog(java.awt.Frame parent) {
        super(parent, true);
        initComponents();
        
        /* Close the actions */
        setCloseAction(closeAboutButton, KeyEvent.VK_ESCAPE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        GridBagConstraints gridBagConstraints;

        JLabel slpashLabel = new JLabel();
        message = new JTextArea();
        closeAboutButton = new JButton();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Acerca de");
        setName("Form"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new GridBagLayout());

        slpashLabel.setHorizontalAlignment(SwingConstants.CENTER);
        slpashLabel.setIcon(new ImageIcon(getClass().getResource("/resources/icon128.png"))); // NOI18N
        slpashLabel.setName("slpashLabel"); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new Insets(10, 10, 10, 5);
        getContentPane().add(slpashLabel, gridBagConstraints);

        message.setEditable(false);
        message.setBackground(SystemColor.control);
        message.setFont(new Font("Tahoma", 0, 13)); // NOI18N
        message.setText("Actualizador de precios.\nv1.3\n\nErick Rincones - 2018");
        message.setName("message"); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new Insets(10, 5, 5, 10);
        getContentPane().add(message, gridBagConstraints);

        closeAboutButton.setMnemonic('C');
        closeAboutButton.setText("Cerrar");
        closeAboutButton.setName("closeAboutButton"); // NOI18N
        closeAboutButton.setActionCommand(closeAboutButton.getName());
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new Insets(2, 0, 5, 0);
        getContentPane().add(closeAboutButton, gridBagConstraints);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * Asign close action to key
     * 
     * @param button Button to activate
     * @param key Key to active the button
     */
    private void setCloseAction(JButton button, int key) {
        String command = button.getName();
        InputMap inputMap = super.getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(key, 0), command);
        super.getRootPane().getActionMap().put(command, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                button.doClick();
            }
        });
    }
    
    /**
     * Close the dialog
     */
    public void close() {
        setVisible(false);
        dispose();
    }
    
    /**
     * Set controller object
     * 
     * @param controller Controller object
     */
    public void setController(ActionListener controller) {
        /* Buttons */
        closeAboutButton.addActionListener(controller);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton closeAboutButton;
    private JTextArea message;
    // End of variables declaration//GEN-END:variables
}
